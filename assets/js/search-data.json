{
  
    
        "post0": {
            "title": "Script2",
            "content": "import { WORDS } from “./words.js”; . const NUMBER_OF_GUESSES = 6; let guessesRemaining = NUMBER_OF_GUESSES; let currentGuess = []; let nextLetter = 0; let rightGuessString = WORDS[Math.floor(Math.random() * WORDS.length)] console.log(rightGuessString) . function initBoard() { let board = document.getElementById(“game-board”); . for (let i = 0; i &lt; NUMBER_OF_GUESSES; i++) { let row = document.createElement(&quot;div&quot;) row.className = &quot;letter-row&quot; for (let j = 0; j &lt; 5; j++) { let box = document.createElement(&quot;div&quot;) box.className = &quot;letter-box&quot; row.appendChild(box) } board.appendChild(row) } } . initBoard() document.addEventListener(“keyup”, (e) =&gt; { . if (guessesRemaining === 0) { return } let pressedKey = String(e.key) if (pressedKey === &quot;Backspace&quot; &amp;&amp; nextLetter !== 0) { deleteLetter() return } if (pressedKey === &quot;Enter&quot;) { checkGuess() return } let found = pressedKey.match(/[a-z]/gi) if (!found || found.length &gt; 1) { return } else { insertLetter(pressedKey) } }) . function insertLetter (pressedKey) { if (nextLetter === 5) { return } pressedKey = pressedKey.toLowerCase() . let row = document.getElementsByClassName(&quot;letter-row&quot;)[6 - guessesRemaining] let box = row.children[nextLetter] box.textContent = pressedKey box.classList.add(&quot;filled-box&quot;) currentGuess.push(pressedKey) nextLetter += 1 } . function deleteLetter () { let row = document.getElementsByClassName(“letter-row”)[6 - guessesRemaining] let box = row.children[nextLetter - 1] box.textContent = “” box.classList.remove(“filled-box”) currentGuess.pop() nextLetter -= 1 } . function checkGuess () { let row = document.getElementsByClassName(“letter-row”)[6 - guessesRemaining] let guessString = ‘’ let rightGuess = Array.from(rightGuessString) . for (const val of currentGuess) { guessString += val } if (guessString.length != 5) { alert(&quot;Not enough letters!&quot;) return } if (!WORDS.includes(guessString)) { alert(&quot;Word not in list!&quot;) return } for (let i = 0; i &lt; 5; i++) { let letterColor = &#39;&#39; let box = row.children[i] let letter = currentGuess[i] let letterPosition = rightGuess.indexOf(currentGuess[i]) // is letter in the correct guess if (letterPosition === -1) { letterColor = &#39;grey&#39; } else { // now, letter is definitely in word // if letter index and right guess index are the same // letter is in the right position if (currentGuess[i] === rightGuess[i]) { // shade green letterColor = &#39;green&#39; } else { // shade box yellow letterColor = &#39;yellow&#39; } rightGuess[letterPosition] = &quot;#&quot; } let delay = 250 * i setTimeout(()=&gt; { //shade box box.style.backgroundColor = letterColor shadeKeyBoard(letter, letterColor) }, delay) } if (guessString === rightGuessString) { alert(&quot;You guessed right! Game over!&quot;) guessesRemaining = 0 return } else { guessesRemaining -= 1; currentGuess = []; nextLetter = 0; if (guessesRemaining === 0) { alert(&quot;You&#39;ve run out of guesses! Game over!&quot;) alert(`The right word was: &quot;${rightGuessString}&quot;`) } } } . function shadeKeyBoard(letter, color) { for (const elem of document.getElementsByClassName(“keyboard-button”)) { if (elem.textContent === letter) { let oldColor = elem.style.backgroundColor if (oldColor === ‘green’) { return } . if (oldColor === &#39;yellow&#39; &amp;&amp; color !== &#39;green&#39;) { return } elem.style.backgroundColor = color break } } } . document.getElementById(“keyboard-cont”).addEventListener(“click”, (e) =&gt; { const target = e.target . if (!target.classList.contains(&quot;keyboard-button&quot;)) { return } let key = target.textContent if (key === &quot;Del&quot;) { key = &quot;Backspace&quot; } document.dispatchEvent(new KeyboardEvent(&quot;keyup&quot;, {&#39;key&#39;: key})) }) .",
            "url": "https://nighthawkcoders.github.io/Word_Nerd/2022/11/02/script2.js",
            "relUrl": "/2022/11/02/script2.js",
            "date": " • Nov 2, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Play Word Nerd",
          "content": "Word Nerd . Word Nerd . &lt;/html&gt; . How to Play How to Play . Guess the word in 6 tries. . Each guess must be a valid 6-letter word. . The color of the squares will change to show how close your guess was to the word. . Green - Letter is in the word and in the correct spot. . Yellow - Letter is in the word but in the wrong spot. . Grey - Letter is not in the word in any spot. . Close Settings Settings . Sound . Sound Language . Español English . Close q w e r t y u i o p Del a s d f g h j k l Enter z x c v b n m",
          "url": "https://nighthawkcoders.github.io/Word_Nerd/wordnerd",
          "relUrl": "/wordnerd",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "About",
          "content": "Hi! We are Aliya, Ananya, Claire, and Sreeja from Mr.Yeung’s 5th period class. We made “Word Nerd”, a game similar to Wordle for our project. .",
          "url": "https://nighthawkcoders.github.io/Word_Nerd/about",
          "relUrl": "/about",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page8": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nighthawkcoders.github.io/Word_Nerd/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}